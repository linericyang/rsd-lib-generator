{
  "Name": "Power",
  "Namespace": "Power.v1_1_0",
  "ModuleName": "Power",
  "ElementType": "EntityType",
  "BaseType": "Power.v1_0_2.Power",
  "IsReferenceableMember": false,
  "Description": "       This is the schema definition for the Power Metrics.  It represents the\n       properties for Power Consumption and Power Limiting.\n    \"\"\"",
  "Properties": {
    "PowerControl": {
      "Name": "PowerControl",
      "Type": "Collection(Power.v1_0_0.PowerControl)",
      "Description": "    \"\"\"This is the definition for power control function (power\n       reading/limiting).\n    \"\"\"",
      "IsReferences": false,
      "IsCollection": true,
      "Namespace": "Power.v1_0_0",
      "ModuleName": "PowerControl",
      "PythonVariableName": "power_control",
      "IsSubResource": false,
      "Expression": "PowerControlCollectionField(\"PowerControl\")"
    },
    "Voltages": {
      "Name": "Voltages",
      "Type": "Collection(Power.v1_0_0.Voltage)",
      "Description": "    \"\"\"This is the definition for voltage sensors.\"\"\"",
      "IsReferences": false,
      "IsCollection": true,
      "Namespace": "Power.v1_0_0",
      "ModuleName": "Voltage",
      "PythonVariableName": "voltages",
      "IsSubResource": false,
      "Expression": "VoltageCollectionField(\"Voltages\")"
    },
    "PowerSupplies": {
      "Name": "PowerSupplies",
      "Type": "Collection(Power.v1_0_0.PowerSupply)",
      "Description": "    \"\"\"Details of the power supplies associated with this system or device\"\"\"",
      "IsReferences": false,
      "IsCollection": true,
      "Namespace": "Power.v1_0_0",
      "ModuleName": "PowerSupply",
      "PythonVariableName": "power_supplies",
      "IsSubResource": false,
      "Expression": "PowerSupplyCollectionField(\"PowerSupplies\")"
    },
    "Redundancy": {
      "Name": "Redundancy",
      "Type": "Collection(Redundancy.v1_1_0.Redundancy)",
      "Description": "    \"\"\"Redundancy information for the power subsystem of this system or device\n    \"\"\"",
      "IsReferences": false,
      "IsCollection": true,
      "Namespace": "Redundancy.v1_1_0",
      "ModuleName": "Redundancy",
      "PythonVariableName": "redundancy",
      "IsSubResource": false,
      "Expression": "redundancy.RedundancyCollectionField(\"Redundancy\")"
    }
  },
  "fields_name": [],
  "fields_name_finished": [
    "Power.v1_0_0.PowerMetric",
    "Resource.Oem",
    "Power.v1_0_0.PowerLimit"
  ],
  "fields": [
    {
      "Name": "PowerMetric",
      "Namespace": "Power.v1_0_0",
      "ModuleName": "PowerMetric",
      "ElementType": "ComplexType",
      "BaseType": null,
      "IsReferenceableMember": false,
      "Description": null,
      "Properties": {
        "IntervalInMin": {
          "Name": "IntervalInMin",
          "Type": "Edm.Int64",
          "Description": "    \"\"\"The time interval (or window) in which the PowerMetrics are measured\n       over.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Int64",
          "PythonVariableName": "interval_in_min",
          "IsSubResource": true,
          "Expression": "base.Field(\"IntervalInMin\", adapter=rsd_lib_utils.num_or_none)"
        },
        "MinConsumedWatts": {
          "Name": "MinConsumedWatts",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The lowest power consumption level over the measurement window (the\n       last IntervalInMin minutes).\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "min_consumed_watts",
          "IsSubResource": true,
          "Expression": "base.Field(\"MinConsumedWatts\", adapter=rsd_lib_utils.num_or_none)"
        },
        "MaxConsumedWatts": {
          "Name": "MaxConsumedWatts",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The highest power consumption level that has occured over the\n       measurement window (the last IntervalInMin minutes).\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "max_consumed_watts",
          "IsSubResource": true,
          "Expression": "base.Field(\"MaxConsumedWatts\", adapter=rsd_lib_utils.num_or_none)"
        },
        "AverageConsumedWatts": {
          "Name": "AverageConsumedWatts",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The average power level over the measurement window (the last\n       IntervalInMin minutes).\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "average_consumed_watts",
          "IsSubResource": true,
          "Expression": "base.Field(\"AverageConsumedWatts\", adapter=rsd_lib_utils.num_or_none)"
        }
      }
    },
    {
      "Name": "PowerLimit",
      "Namespace": "Power.v1_0_0",
      "ModuleName": "PowerLimit",
      "ElementType": "ComplexType",
      "BaseType": null,
      "IsReferenceableMember": false,
      "Description": "       This object contains power limit status and configuration information\n       for the chassis.\n    \"\"\"",
      "Properties": {
        "LimitInWatts": {
          "Name": "LimitInWatts",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The Power limit in watts. Set to null to disable power capping.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "limit_in_watts",
          "IsSubResource": true,
          "Expression": "base.Field(\"LimitInWatts\", adapter=rsd_lib_utils.num_or_none)"
        },
        "LimitException": {
          "Name": "LimitException",
          "Type": "Power.v1_0_0.PowerLimitException",
          "Description": "    \"\"\"The action that is taken if the power cannot be maintained below the\n       LimitInWatts.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Power.v1_0_0",
          "ModuleName": "PowerLimitException",
          "PythonVariableName": "limit_exception",
          "IsSubResource": true,
          "Expression": "base.Field(\"LimitException\")"
        },
        "CorrectionInMs": {
          "Name": "CorrectionInMs",
          "Type": "Edm.Int64",
          "Description": "    \"\"\"The time required for the limiting process to reduce power consumption\n       to below the limit.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Int64",
          "PythonVariableName": "correction_in_ms",
          "IsSubResource": true,
          "Expression": "base.Field(\"CorrectionInMs\", adapter=rsd_lib_utils.num_or_none)"
        }
      }
    }
  ],
  "other_fields": [
    {
      "Name": "Oem",
      "Namespace": "Resource",
      "ModuleName": "Oem",
      "ElementType": "ComplexType",
      "BaseType": null,
      "IsReferenceableMember": false,
      "Description": "       Oem extension object.\n    \"\"\"",
      "Properties": {}
    }
  ],
  "collection_fields_name": [],
  "collection_fields_name_finished": [
    "Power.v1_1_0.InputRange",
    "Power.v1_1_0.PowerSupply",
    "Power.v1_0_0.Voltage",
    "Redundancy.v1_1_0.Redundancy",
    "Power.v1_0_0.PowerControl"
  ],
  "collection_fields": [
    {
      "Name": "PowerControl",
      "Namespace": "Power.v1_0_0",
      "ModuleName": "PowerControl",
      "ElementType": "EntityType",
      "BaseType": "Resource.v1_0_0.ReferenceableMember",
      "IsReferenceableMember": true,
      "Description": null,
      "Properties": {
        "Name": {
          "Name": "Name",
          "Type": "Edm.String",
          "Description": "    \"\"\"Power Control Function name.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "String",
          "PythonVariableName": "name",
          "IsSubResource": true,
          "Expression": "base.Field(\"Name\")"
        },
        "PowerConsumedWatts": {
          "Name": "PowerConsumedWatts",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The actual power being consumed by the chassis.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "power_consumed_watts",
          "IsSubResource": true,
          "Expression": "base.Field(\"PowerConsumedWatts\", adapter=rsd_lib_utils.num_or_none)"
        },
        "PowerRequestedWatts": {
          "Name": "PowerRequestedWatts",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The potential power that the chassis resources are requesting which may\n       be higher than the current level being consumed since requested power\n       includes budget that the chassis resource wants for future use.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "power_requested_watts",
          "IsSubResource": true,
          "Expression": "base.Field(\"PowerRequestedWatts\", adapter=rsd_lib_utils.num_or_none)"
        },
        "PowerAvailableWatts": {
          "Name": "PowerAvailableWatts",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The amount of power not already budgeted and therefore available for\n       additional allocation. (powerCapacity - powerAllocated).  This\n       indicates how much reserve power capacity is left.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "power_available_watts",
          "IsSubResource": true,
          "Expression": "base.Field(\"PowerAvailableWatts\", adapter=rsd_lib_utils.num_or_none)"
        },
        "PowerCapacityWatts": {
          "Name": "PowerCapacityWatts",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The total amount of power available to the chassis for allocation. This\n       may the power supply capacity, or power budget assigned to the chassis\n       from an up-stream chassis.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "power_capacity_watts",
          "IsSubResource": true,
          "Expression": "base.Field(\"PowerCapacityWatts\", adapter=rsd_lib_utils.num_or_none)"
        },
        "PowerAllocatedWatts": {
          "Name": "PowerAllocatedWatts",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The total amount of power that has been allocated (or budegeted)to \n       chassis resources.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "power_allocated_watts",
          "IsSubResource": true,
          "Expression": "base.Field(\"PowerAllocatedWatts\", adapter=rsd_lib_utils.num_or_none)"
        },
        "PowerMetrics": {
          "Name": "PowerMetrics",
          "Type": "Power.v1_0_0.PowerMetric",
          "Description": "    \"\"\"Power readings for this chassis.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Power.v1_0_0",
          "ModuleName": "PowerMetric",
          "PythonVariableName": "power_metrics",
          "IsSubResource": true,
          "Expression": "PowerMetricField(\"PowerMetrics\")"
        },
        "PowerLimit": {
          "Name": "PowerLimit",
          "Type": "Power.v1_0_0.PowerLimit",
          "Description": "    \"\"\"Power limit status and configuration information for this chassis\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Power.v1_0_0",
          "ModuleName": "PowerLimit",
          "PythonVariableName": "power_limit",
          "IsSubResource": true,
          "Expression": "PowerLimitField(\"PowerLimit\")"
        },
        "Status": {
          "Name": "Status",
          "Type": "Resource.Status",
          "Description": "    \"\"\"This indicates the known state of the resource, such as if it is\n       enabled.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Resource",
          "ModuleName": "Status",
          "PythonVariableName": "status",
          "IsSubResource": true,
          "Expression": "rsd_lib_base.StatusField(\"Status\")"
        },
        "RelatedItem": {
          "Name": "RelatedItem",
          "Type": "Collection(Resource.Item)",
          "Description": "    \"\"\"The ID(s) of the resources associated with this Power Limit\"\"\"",
          "IsReferences": true,
          "IsCollection": true,
          "Namespace": "Resource",
          "ModuleName": "Item",
          "PythonVariableName": "related_item",
          "IsSubResource": true,
          "Expression": "base.Field(\"RelatedItem\", adapter=utils.get_members_identities)"
        }
      }
    },
    {
      "Name": "Voltage",
      "Namespace": "Power.v1_0_0",
      "ModuleName": "Voltage",
      "ElementType": "EntityType",
      "BaseType": "Resource.v1_0_0.ReferenceableMember",
      "IsReferenceableMember": true,
      "Description": null,
      "Properties": {
        "Name": {
          "Name": "Name",
          "Type": "Edm.String",
          "Description": "    \"\"\"Voltage sensor name.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "String",
          "PythonVariableName": "name",
          "IsSubResource": true,
          "Expression": "base.Field(\"Name\")"
        },
        "SensorNumber": {
          "Name": "SensorNumber",
          "Type": "Edm.Int64",
          "Description": "    \"\"\"A numerical identifier to represent the voltage sensor\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Int64",
          "PythonVariableName": "sensor_number",
          "IsSubResource": true,
          "Expression": "base.Field(\"SensorNumber\", adapter=rsd_lib_utils.num_or_none)"
        },
        "Status": {
          "Name": "Status",
          "Type": "Resource.Status",
          "Description": "    \"\"\"This indicates the known state of the resource, such as if it is\n       enabled.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Resource",
          "ModuleName": "Status",
          "PythonVariableName": "status",
          "IsSubResource": true,
          "Expression": "rsd_lib_base.StatusField(\"Status\")"
        },
        "ReadingVolts": {
          "Name": "ReadingVolts",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The current value of the voltage sensor.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "reading_volts",
          "IsSubResource": true,
          "Expression": "base.Field(\"ReadingVolts\", adapter=rsd_lib_utils.num_or_none)"
        },
        "UpperThresholdNonCritical": {
          "Name": "UpperThresholdNonCritical",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"Above normal range\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "upper_threshold_non_critical",
          "IsSubResource": true,
          "Expression": "base.Field(\"UpperThresholdNonCritical\", adapter=rsd_lib_utils.num_or_none)"
        },
        "UpperThresholdCritical": {
          "Name": "UpperThresholdCritical",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"Above normal range but not yet fatal.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "upper_threshold_critical",
          "IsSubResource": true,
          "Expression": "base.Field(\"UpperThresholdCritical\", adapter=rsd_lib_utils.num_or_none)"
        },
        "UpperThresholdFatal": {
          "Name": "UpperThresholdFatal",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"Above normal range and is fatal\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "upper_threshold_fatal",
          "IsSubResource": true,
          "Expression": "base.Field(\"UpperThresholdFatal\", adapter=rsd_lib_utils.num_or_none)"
        },
        "LowerThresholdNonCritical": {
          "Name": "LowerThresholdNonCritical",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"Below normal range\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "lower_threshold_non_critical",
          "IsSubResource": true,
          "Expression": "base.Field(\"LowerThresholdNonCritical\", adapter=rsd_lib_utils.num_or_none)"
        },
        "LowerThresholdCritical": {
          "Name": "LowerThresholdCritical",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"Below normal range but not yet fatal.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "lower_threshold_critical",
          "IsSubResource": true,
          "Expression": "base.Field(\"LowerThresholdCritical\", adapter=rsd_lib_utils.num_or_none)"
        },
        "LowerThresholdFatal": {
          "Name": "LowerThresholdFatal",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"Below normal range and is fatal\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "lower_threshold_fatal",
          "IsSubResource": true,
          "Expression": "base.Field(\"LowerThresholdFatal\", adapter=rsd_lib_utils.num_or_none)"
        },
        "MinReadingRange": {
          "Name": "MinReadingRange",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"Minimum value for CurrentReading\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "min_reading_range",
          "IsSubResource": true,
          "Expression": "base.Field(\"MinReadingRange\", adapter=rsd_lib_utils.num_or_none)"
        },
        "MaxReadingRange": {
          "Name": "MaxReadingRange",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"Maximum value for CurrentReading\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "max_reading_range",
          "IsSubResource": true,
          "Expression": "base.Field(\"MaxReadingRange\", adapter=rsd_lib_utils.num_or_none)"
        },
        "PhysicalContext": {
          "Name": "PhysicalContext",
          "Type": "PhysicalContext.v1_0_0.PhysicalContext",
          "Description": "    \"\"\"Describes the area or device to which this voltage measurement applies.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "PhysicalContext.v1_0_0",
          "ModuleName": "PhysicalContext",
          "PythonVariableName": "physical_context",
          "IsSubResource": true,
          "Expression": "base.Field(\"PhysicalContext\")"
        },
        "RelatedItem": {
          "Name": "RelatedItem",
          "Type": "Collection(Resource.Item)",
          "Description": "    \"\"\"Describes the areas or devices to which this voltage measurement\n       applies.\n    \"\"\"",
          "IsReferences": true,
          "IsCollection": true,
          "Namespace": "Resource",
          "ModuleName": "Item",
          "PythonVariableName": "related_item",
          "IsSubResource": true,
          "Expression": "base.Field(\"RelatedItem\", adapter=utils.get_members_identities)"
        }
      }
    },
    {
      "Name": "InputRange",
      "Namespace": "Power.v1_1_0",
      "ModuleName": "InputRange",
      "ElementType": "ComplexType",
      "BaseType": null,
      "IsReferenceableMember": false,
      "Description": null,
      "Properties": {
        "InputType": {
          "Name": "InputType",
          "Type": "Power.v1_1_0.InputType",
          "Description": "    \"\"\"The Input type (AC or DC)\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Power.v1_1_0",
          "ModuleName": "InputType",
          "PythonVariableName": "input_type",
          "IsSubResource": true,
          "Expression": "base.Field(\"InputType\")"
        },
        "MinimumVoltage": {
          "Name": "MinimumVoltage",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The minimum line input voltage at which this power supply input range\n       is effective\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "minimum_voltage",
          "IsSubResource": true,
          "Expression": "base.Field(\"MinimumVoltage\", adapter=rsd_lib_utils.num_or_none)"
        },
        "MaximumVoltage": {
          "Name": "MaximumVoltage",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The maximum line input voltage at which this power supply input range\n       is effective\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "maximum_voltage",
          "IsSubResource": true,
          "Expression": "base.Field(\"MaximumVoltage\", adapter=rsd_lib_utils.num_or_none)"
        },
        "MinimumFrequencyHz": {
          "Name": "MinimumFrequencyHz",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The minimum line input frequency at which this power supply input range\n       is effective\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "minimum_frequency_hz",
          "IsSubResource": true,
          "Expression": "base.Field(\"MinimumFrequencyHz\", adapter=rsd_lib_utils.num_or_none)"
        },
        "MaximumFrequencyHz": {
          "Name": "MaximumFrequencyHz",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The maximum line input frequency at which this power supply input range\n       is effective\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "maximum_frequency_hz",
          "IsSubResource": true,
          "Expression": "base.Field(\"MaximumFrequencyHz\", adapter=rsd_lib_utils.num_or_none)"
        },
        "OutputWattage": {
          "Name": "OutputWattage",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The maximum capacity of this Power Supply when operating in this input\n       range\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "output_wattage",
          "IsSubResource": true,
          "Expression": "base.Field(\"OutputWattage\", adapter=rsd_lib_utils.num_or_none)"
        },
        "Oem": {
          "Name": "Oem",
          "Type": "Resource.Oem",
          "Description": null,
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Resource",
          "ModuleName": "Oem",
          "PythonVariableName": "oem",
          "IsSubResource": true,
          "Expression": "resource.OemField(\"Oem\")"
        }
      }
    },
    {
      "Name": "PowerSupply",
      "Namespace": "Power.v1_1_0",
      "ModuleName": "PowerSupply",
      "ElementType": "EntityType",
      "BaseType": "Power.v1_0_0.PowerSupply",
      "IsReferenceableMember": true,
      "Description": "       Details of a power supplies associated with this system or device\n    \"\"\"",
      "Properties": {
        "Name": {
          "Name": "Name",
          "Type": "Edm.String",
          "Description": "    \"\"\"The name of the Power Supply\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "String",
          "PythonVariableName": "name",
          "IsSubResource": true,
          "Expression": "base.Field(\"Name\")"
        },
        "PowerSupplyType": {
          "Name": "PowerSupplyType",
          "Type": "Power.v1_0_0.PowerSupplyType",
          "Description": "    \"\"\"The Power Supply type (AC or DC)\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Power.v1_0_0",
          "ModuleName": "PowerSupplyType",
          "PythonVariableName": "power_supply_type",
          "IsSubResource": true,
          "Expression": "base.Field(\"PowerSupplyType\")"
        },
        "LineInputVoltageType": {
          "Name": "LineInputVoltageType",
          "Type": "Power.v1_0_0.LineInputVoltageType",
          "Description": "    \"\"\"The line voltage type supported as an input to this Power Supply\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Power.v1_0_0",
          "ModuleName": "LineInputVoltageType",
          "PythonVariableName": "line_input_voltage_type",
          "IsSubResource": true,
          "Expression": "base.Field(\"LineInputVoltageType\")"
        },
        "LineInputVoltage": {
          "Name": "LineInputVoltage",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The line input voltage at which the Power Supply is operating\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "line_input_voltage",
          "IsSubResource": true,
          "Expression": "base.Field(\"LineInputVoltage\", adapter=rsd_lib_utils.num_or_none)"
        },
        "PowerCapacityWatts": {
          "Name": "PowerCapacityWatts",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The maximum capacity of this Power Supply\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "power_capacity_watts",
          "IsSubResource": true,
          "Expression": "base.Field(\"PowerCapacityWatts\", adapter=rsd_lib_utils.num_or_none)"
        },
        "LastPowerOutputWatts": {
          "Name": "LastPowerOutputWatts",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"The average power output of this Power Supply\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "last_power_output_watts",
          "IsSubResource": true,
          "Expression": "base.Field(\"LastPowerOutputWatts\", adapter=rsd_lib_utils.num_or_none)"
        },
        "Model": {
          "Name": "Model",
          "Type": "Edm.String",
          "Description": "    \"\"\"The model number for this Power Supply\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "String",
          "PythonVariableName": "model",
          "IsSubResource": true,
          "Expression": "base.Field(\"Model\")"
        },
        "FirmwareVersion": {
          "Name": "FirmwareVersion",
          "Type": "Edm.String",
          "Description": "    \"\"\"The firmware version for this Power Supply\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "String",
          "PythonVariableName": "firmware_version",
          "IsSubResource": true,
          "Expression": "base.Field(\"FirmwareVersion\")"
        },
        "SerialNumber": {
          "Name": "SerialNumber",
          "Type": "Edm.String",
          "Description": "    \"\"\"The serial number for this Power Supply\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "String",
          "PythonVariableName": "serial_number",
          "IsSubResource": true,
          "Expression": "base.Field(\"SerialNumber\")"
        },
        "PartNumber": {
          "Name": "PartNumber",
          "Type": "Edm.String",
          "Description": "    \"\"\"The part number for this Power Supply\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "String",
          "PythonVariableName": "part_number",
          "IsSubResource": true,
          "Expression": "base.Field(\"PartNumber\")"
        },
        "SparePartNumber": {
          "Name": "SparePartNumber",
          "Type": "Edm.String",
          "Description": "    \"\"\"The spare part number for this Power Supply\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "String",
          "PythonVariableName": "spare_part_number",
          "IsSubResource": true,
          "Expression": "base.Field(\"SparePartNumber\")"
        },
        "Status": {
          "Name": "Status",
          "Type": "Resource.Status",
          "Description": "    \"\"\"This indicates the known state of the resource, such as if it is\n       enabled.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Resource",
          "ModuleName": "Status",
          "PythonVariableName": "status",
          "IsSubResource": true,
          "Expression": "rsd_lib_base.StatusField(\"Status\")"
        },
        "RelatedItem": {
          "Name": "RelatedItem",
          "Type": "Collection(Resource.Item)",
          "Description": "    \"\"\"The ID(s) of the resources associated with this Power Limit\"\"\"",
          "IsReferences": true,
          "IsCollection": true,
          "Namespace": "Resource",
          "ModuleName": "Item",
          "PythonVariableName": "related_item",
          "IsSubResource": true,
          "Expression": "base.Field(\"RelatedItem\", adapter=utils.get_members_identities)"
        },
        "Redundancy": {
          "Name": "Redundancy",
          "Type": "Collection(Redundancy.v1_1_0.Redundancy)",
          "Description": "    \"\"\"This structure is used to show redundancy for power supplies.  The\n       Component ids will reference the members of the redundancy groups.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": true,
          "Namespace": "Redundancy.v1_1_0",
          "ModuleName": "Redundancy",
          "PythonVariableName": "redundancy",
          "IsSubResource": true,
          "Expression": "redundancy.RedundancyCollectionField(\"Redundancy\")"
        },
        "Manufacturer": {
          "Name": "Manufacturer",
          "Type": "Edm.String",
          "Description": "    \"\"\"This is the manufacturer of this power supply.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "String",
          "PythonVariableName": "manufacturer",
          "IsSubResource": true,
          "Expression": "base.Field(\"Manufacturer\")"
        },
        "InputRanges": {
          "Name": "InputRanges",
          "Type": "Collection(Power.v1_1_0.InputRange)",
          "Description": "    \"\"\"This is the input ranges that the power supply can use.\"\"\"",
          "IsReferences": false,
          "IsCollection": true,
          "Namespace": "Power.v1_1_0",
          "ModuleName": "InputRange",
          "PythonVariableName": "input_ranges",
          "IsSubResource": true,
          "Expression": "InputRangeCollectionField(\"InputRanges\")"
        }
      }
    }
  ],
  "other_collection_fields": [
    {
      "Name": "Redundancy",
      "Namespace": "Redundancy.v1_1_0",
      "ModuleName": "Redundancy",
      "ElementType": "EntityType",
      "BaseType": "Redundancy.v1_0_2.Redundancy",
      "IsReferenceableMember": true,
      "Description": "       This is the redundancy definition to be used in other resource schemas.\n    \"\"\"",
      "Properties": {
        "Name": {
          "Name": "Name",
          "Type": "Edm.String",
          "Description": "    \"\"\"The name of the resource or array element.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "String",
          "PythonVariableName": "name",
          "IsSubResource": true,
          "Expression": "base.Field(\"Name\")"
        },
        "Mode": {
          "Name": "Mode",
          "Type": "Redundancy.v1_0_0.RedundancyMode",
          "Description": "    \"\"\"This is the redundancy mode of the group.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Redundancy.v1_0_0",
          "ModuleName": "RedundancyMode",
          "PythonVariableName": "mode",
          "IsSubResource": true,
          "Expression": "base.Field(\"Mode\")"
        },
        "MaxNumSupported": {
          "Name": "MaxNumSupported",
          "Type": "Edm.Int64",
          "Description": "    \"\"\"This is the maximum number of members allowable for this particular\n       redundancy group.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Int64",
          "PythonVariableName": "max_num_supported",
          "IsSubResource": true,
          "Expression": "base.Field(\"MaxNumSupported\", adapter=rsd_lib_utils.num_or_none)"
        },
        "MinNumNeeded": {
          "Name": "MinNumNeeded",
          "Type": "Edm.Int64",
          "Description": "    \"\"\"This is the minumum number of members needed for this group to be\n       redundant.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Int64",
          "PythonVariableName": "min_num_needed",
          "IsSubResource": true,
          "Expression": "base.Field(\"MinNumNeeded\", adapter=rsd_lib_utils.num_or_none)"
        },
        "Status": {
          "Name": "Status",
          "Type": "Resource.Status",
          "Description": "    \"\"\"This indicates the known state of the resource, such as if it is\n       enabled.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Resource",
          "ModuleName": "Status",
          "PythonVariableName": "status",
          "IsSubResource": true,
          "Expression": "rsd_lib_base.StatusField(\"Status\")"
        },
        "RedundancySet": {
          "Name": "RedundancySet",
          "Type": "Collection(Resource.Item)",
          "Description": "    \"\"\"Contains any ids that represent components of this redundancy set.\"\"\"",
          "IsReferences": true,
          "IsCollection": true,
          "Namespace": "Resource",
          "ModuleName": "Item",
          "PythonVariableName": "redundancy_set",
          "IsSubResource": true,
          "Expression": "base.Field(\"RedundancySet\", adapter=utils.get_members_identities)"
        },
        "RedundancyEnabled": {
          "Name": "RedundancyEnabled",
          "Type": "Edm.Boolean",
          "Description": "    \"\"\"This indicates whether redundancy is enabled.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Boolean",
          "PythonVariableName": "redundancy_enabled",
          "IsSubResource": true,
          "Expression": "base.Field(\"RedundancyEnabled\", adapter=bool)"
        }
      }
    }
  ],
  "links_fields": [],
  "other_modules": [
    "redundancy",
    "resource"
  ],
  "IsCollectionExist": false
}