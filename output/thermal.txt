{
  "Name": "Thermal",
  "Namespace": "Thermal.v1_1_0",
  "ModuleName": "Thermal",
  "ElementType": "EntityType",
  "BaseType": "Thermal.v1_0_2.Thermal",
  "IsReferenceableMember": false,
  "Description": "       This is the schema definition for the Thermal properties.  It\n       represents the properties for Temperature and Cooling.\n    \"\"\"",
  "Properties": {
    "Status": {
      "Name": "Status",
      "Type": "Resource.Status",
      "Description": "    \"\"\"This indicates the known state of the resource, such as if it is\n       enabled.\n    \"\"\"",
      "IsReferences": false,
      "IsCollection": false,
      "Namespace": "Resource",
      "ModuleName": "Status",
      "PythonVariableName": "status",
      "IsSubResource": false,
      "Expression": "rsd_lib_base.StatusField(\"Status\")"
    },
    "Temperatures": {
      "Name": "Temperatures",
      "Type": "Collection(Thermal.v1_0_0.Temperature)",
      "Description": "    \"\"\"This is the definition for temperature sensors.\"\"\"",
      "IsReferences": false,
      "IsCollection": true,
      "Namespace": "Thermal.v1_0_0",
      "ModuleName": "Temperature",
      "PythonVariableName": "temperatures",
      "IsSubResource": false,
      "Expression": "TemperatureCollectionField(\"Temperatures\")"
    },
    "Fans": {
      "Name": "Fans",
      "Type": "Collection(Thermal.v1_0_0.Fan)",
      "Description": "    \"\"\"This is the definition for fans.\"\"\"",
      "IsReferences": false,
      "IsCollection": true,
      "Namespace": "Thermal.v1_0_0",
      "ModuleName": "Fan",
      "PythonVariableName": "fans",
      "IsSubResource": false,
      "Expression": "FanCollectionField(\"Fans\")"
    },
    "Redundancy": {
      "Name": "Redundancy",
      "Type": "Collection(Redundancy.v1_1_0.Redundancy)",
      "Description": "    \"\"\"This structure is used to show redundancy for fans.  The Component ids\n       will reference the members of the redundancy groups.\n    \"\"\"",
      "IsReferences": false,
      "IsCollection": true,
      "Namespace": "Redundancy.v1_1_0",
      "ModuleName": "Redundancy",
      "PythonVariableName": "redundancy",
      "IsSubResource": false,
      "Expression": "redundancy.RedundancyCollectionField(\"Redundancy\")"
    }
  },
  "fields_name": [],
  "fields_name_finished": [],
  "fields": [],
  "other_fields": [],
  "collection_fields_name": [],
  "collection_fields_name_finished": [
    "Redundancy.v1_1_0.Redundancy",
    "Thermal.v1_0_0.Temperature",
    "Thermal.v1_1_0.Fan"
  ],
  "collection_fields": [
    {
      "Name": "Fan",
      "Namespace": "Thermal.v1_1_0",
      "ModuleName": "Fan",
      "ElementType": "EntityType",
      "BaseType": "Thermal.v1_0_1.Fan",
      "IsReferenceableMember": true,
      "Description": null,
      "Properties": {
        "FanName": {
          "Name": "FanName",
          "Type": "Edm.String",
          "Description": "    \"\"\"Name of the fan\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "String",
          "PythonVariableName": "fan_name",
          "IsSubResource": true,
          "Expression": "base.Field(\"FanName\")"
        },
        "PhysicalContext": {
          "Name": "PhysicalContext",
          "Type": "PhysicalContext.v1_0_0.PhysicalContext",
          "Description": "    \"\"\"Describes the area or device associated with this fan.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "PhysicalContext.v1_0_0",
          "ModuleName": "PhysicalContext",
          "PythonVariableName": "physical_context",
          "IsSubResource": true,
          "Expression": "base.Field(\"PhysicalContext\")"
        },
        "Status": {
          "Name": "Status",
          "Type": "Resource.Status",
          "Description": "    \"\"\"This indicates the known state of the resource, such as if it is\n       enabled.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Resource",
          "ModuleName": "Status",
          "PythonVariableName": "status",
          "IsSubResource": true,
          "Expression": "rsd_lib_base.StatusField(\"Status\")"
        },
        "Reading": {
          "Name": "Reading",
          "Type": "Edm.Int64",
          "Description": "    \"\"\"Current fan speed\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Int64",
          "PythonVariableName": "reading",
          "IsSubResource": true,
          "Expression": "base.Field(\"Reading\", adapter=rsd_lib_utils.num_or_none)"
        },
        "UpperThresholdNonCritical": {
          "Name": "UpperThresholdNonCritical",
          "Type": "Edm.Int64",
          "Description": "    \"\"\"Above normal range\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Int64",
          "PythonVariableName": "upper_threshold_non_critical",
          "IsSubResource": true,
          "Expression": "base.Field(\"UpperThresholdNonCritical\", adapter=rsd_lib_utils.num_or_none)"
        },
        "UpperThresholdCritical": {
          "Name": "UpperThresholdCritical",
          "Type": "Edm.Int64",
          "Description": "    \"\"\"Above normal range but not yet fatal\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Int64",
          "PythonVariableName": "upper_threshold_critical",
          "IsSubResource": true,
          "Expression": "base.Field(\"UpperThresholdCritical\", adapter=rsd_lib_utils.num_or_none)"
        },
        "UpperThresholdFatal": {
          "Name": "UpperThresholdFatal",
          "Type": "Edm.Int64",
          "Description": "    \"\"\"Above normal range and is fatal\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Int64",
          "PythonVariableName": "upper_threshold_fatal",
          "IsSubResource": true,
          "Expression": "base.Field(\"UpperThresholdFatal\", adapter=rsd_lib_utils.num_or_none)"
        },
        "LowerThresholdNonCritical": {
          "Name": "LowerThresholdNonCritical",
          "Type": "Edm.Int64",
          "Description": "    \"\"\"Below normal range\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Int64",
          "PythonVariableName": "lower_threshold_non_critical",
          "IsSubResource": true,
          "Expression": "base.Field(\"LowerThresholdNonCritical\", adapter=rsd_lib_utils.num_or_none)"
        },
        "LowerThresholdCritical": {
          "Name": "LowerThresholdCritical",
          "Type": "Edm.Int64",
          "Description": "    \"\"\"Below normal range but not yet fatal\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Int64",
          "PythonVariableName": "lower_threshold_critical",
          "IsSubResource": true,
          "Expression": "base.Field(\"LowerThresholdCritical\", adapter=rsd_lib_utils.num_or_none)"
        },
        "LowerThresholdFatal": {
          "Name": "LowerThresholdFatal",
          "Type": "Edm.Int64",
          "Description": "    \"\"\"Below normal range and is fatal\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Int64",
          "PythonVariableName": "lower_threshold_fatal",
          "IsSubResource": true,
          "Expression": "base.Field(\"LowerThresholdFatal\", adapter=rsd_lib_utils.num_or_none)"
        },
        "MinReadingRange": {
          "Name": "MinReadingRange",
          "Type": "Edm.Int64",
          "Description": "    \"\"\"Minimum value for Reading\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Int64",
          "PythonVariableName": "min_reading_range",
          "IsSubResource": true,
          "Expression": "base.Field(\"MinReadingRange\", adapter=rsd_lib_utils.num_or_none)"
        },
        "MaxReadingRange": {
          "Name": "MaxReadingRange",
          "Type": "Edm.Int64",
          "Description": "    \"\"\"Maximum value for Reading\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Int64",
          "PythonVariableName": "max_reading_range",
          "IsSubResource": true,
          "Expression": "base.Field(\"MaxReadingRange\", adapter=rsd_lib_utils.num_or_none)"
        },
        "RelatedItem": {
          "Name": "RelatedItem",
          "Type": "Collection(Resource.Item)",
          "Description": "    \"\"\"The ID(s) of the resources serviced with this fan\"\"\"",
          "IsReferences": true,
          "IsCollection": true,
          "Namespace": "Resource",
          "ModuleName": "Item",
          "PythonVariableName": "related_item",
          "IsSubResource": true,
          "Expression": "base.Field(\"RelatedItem\", adapter=utils.get_members_identities)"
        },
        "Redundancy": {
          "Name": "Redundancy",
          "Type": "Collection(Redundancy.v1_1_0.Redundancy)",
          "Description": "    \"\"\"This structure is used to show redundancy for fans.  The Component ids\n       will reference the members of the redundancy groups.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": true,
          "Namespace": "Redundancy.v1_1_0",
          "ModuleName": "Redundancy",
          "PythonVariableName": "redundancy",
          "IsSubResource": true,
          "Expression": "redundancy.RedundancyCollectionField(\"Redundancy\")"
        },
        "ReadingUnits": {
          "Name": "ReadingUnits",
          "Type": "Thermal.v1_0_1.ReadingUnits",
          "Description": "    \"\"\"Units in which the reading and thresholds are measured.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Thermal.v1_0_1",
          "ModuleName": "ReadingUnits",
          "PythonVariableName": "reading_units",
          "IsSubResource": true,
          "Expression": "base.Field(\"ReadingUnits\")"
        },
        "Name": {
          "Name": "Name",
          "Type": "Edm.String",
          "Description": "    \"\"\"Name of the fan\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "String",
          "PythonVariableName": "name",
          "IsSubResource": true,
          "Expression": "base.Field(\"Name\")"
        }
      }
    },
    {
      "Name": "Temperature",
      "Namespace": "Thermal.v1_0_0",
      "ModuleName": "Temperature",
      "ElementType": "EntityType",
      "BaseType": "Resource.v1_0_0.ReferenceableMember",
      "IsReferenceableMember": true,
      "Description": null,
      "Properties": {
        "Name": {
          "Name": "Name",
          "Type": "Edm.String",
          "Description": "    \"\"\"Temperature sensor name.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "String",
          "PythonVariableName": "name",
          "IsSubResource": true,
          "Expression": "base.Field(\"Name\")"
        },
        "SensorNumber": {
          "Name": "SensorNumber",
          "Type": "Edm.Int64",
          "Description": "    \"\"\"A numerical identifier to represent the temperature sensor\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Int64",
          "PythonVariableName": "sensor_number",
          "IsSubResource": true,
          "Expression": "base.Field(\"SensorNumber\", adapter=rsd_lib_utils.num_or_none)"
        },
        "Status": {
          "Name": "Status",
          "Type": "Resource.Status",
          "Description": "    \"\"\"This indicates the known state of the resource, such as if it is\n       enabled.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Resource",
          "ModuleName": "Status",
          "PythonVariableName": "status",
          "IsSubResource": true,
          "Expression": "rsd_lib_base.StatusField(\"Status\")"
        },
        "ReadingCelsius": {
          "Name": "ReadingCelsius",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"Temperature\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "reading_celsius",
          "IsSubResource": true,
          "Expression": "base.Field(\"ReadingCelsius\", adapter=rsd_lib_utils.num_or_none)"
        },
        "UpperThresholdNonCritical": {
          "Name": "UpperThresholdNonCritical",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"Above normal range\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "upper_threshold_non_critical",
          "IsSubResource": true,
          "Expression": "base.Field(\"UpperThresholdNonCritical\", adapter=rsd_lib_utils.num_or_none)"
        },
        "UpperThresholdCritical": {
          "Name": "UpperThresholdCritical",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"Above normal range but not yet fatal.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "upper_threshold_critical",
          "IsSubResource": true,
          "Expression": "base.Field(\"UpperThresholdCritical\", adapter=rsd_lib_utils.num_or_none)"
        },
        "UpperThresholdFatal": {
          "Name": "UpperThresholdFatal",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"Above normal range and is fatal\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "upper_threshold_fatal",
          "IsSubResource": true,
          "Expression": "base.Field(\"UpperThresholdFatal\", adapter=rsd_lib_utils.num_or_none)"
        },
        "LowerThresholdNonCritical": {
          "Name": "LowerThresholdNonCritical",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"Below normal range\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "lower_threshold_non_critical",
          "IsSubResource": true,
          "Expression": "base.Field(\"LowerThresholdNonCritical\", adapter=rsd_lib_utils.num_or_none)"
        },
        "LowerThresholdCritical": {
          "Name": "LowerThresholdCritical",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"Below normal range but not yet fatal.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "lower_threshold_critical",
          "IsSubResource": true,
          "Expression": "base.Field(\"LowerThresholdCritical\", adapter=rsd_lib_utils.num_or_none)"
        },
        "LowerThresholdFatal": {
          "Name": "LowerThresholdFatal",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"Below normal range and is fatal\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "lower_threshold_fatal",
          "IsSubResource": true,
          "Expression": "base.Field(\"LowerThresholdFatal\", adapter=rsd_lib_utils.num_or_none)"
        },
        "MinReadingRangeTemp": {
          "Name": "MinReadingRangeTemp",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"Minimum value for ReadingCelsius\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "min_reading_range_temp",
          "IsSubResource": true,
          "Expression": "base.Field(\"MinReadingRangeTemp\", adapter=rsd_lib_utils.num_or_none)"
        },
        "MaxReadingRangeTemp": {
          "Name": "MaxReadingRangeTemp",
          "Type": "Edm.Decimal",
          "Description": "    \"\"\"Maximum value for ReadingCelsius\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Decimal",
          "PythonVariableName": "max_reading_range_temp",
          "IsSubResource": true,
          "Expression": "base.Field(\"MaxReadingRangeTemp\", adapter=rsd_lib_utils.num_or_none)"
        },
        "PhysicalContext": {
          "Name": "PhysicalContext",
          "Type": "PhysicalContext.v1_0_0.PhysicalContext",
          "Description": "    \"\"\"Describes the area or device to which this temperature measurement\n       applies.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "PhysicalContext.v1_0_0",
          "ModuleName": "PhysicalContext",
          "PythonVariableName": "physical_context",
          "IsSubResource": true,
          "Expression": "base.Field(\"PhysicalContext\")"
        },
        "RelatedItem": {
          "Name": "RelatedItem",
          "Type": "Collection(Resource.Item)",
          "Description": "    \"\"\"Describes the areas or devices to which this temperature measurement\n       applies.\n    \"\"\"",
          "IsReferences": true,
          "IsCollection": true,
          "Namespace": "Resource",
          "ModuleName": "Item",
          "PythonVariableName": "related_item",
          "IsSubResource": true,
          "Expression": "base.Field(\"RelatedItem\", adapter=utils.get_members_identities)"
        }
      }
    }
  ],
  "other_collection_fields": [
    {
      "Name": "Redundancy",
      "Namespace": "Redundancy.v1_1_0",
      "ModuleName": "Redundancy",
      "ElementType": "EntityType",
      "BaseType": "Redundancy.v1_0_2.Redundancy",
      "IsReferenceableMember": true,
      "Description": "       This is the redundancy definition to be used in other resource schemas.\n    \"\"\"",
      "Properties": {
        "Name": {
          "Name": "Name",
          "Type": "Edm.String",
          "Description": "    \"\"\"The name of the resource or array element.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "String",
          "PythonVariableName": "name",
          "IsSubResource": true,
          "Expression": "base.Field(\"Name\")"
        },
        "Mode": {
          "Name": "Mode",
          "Type": "Redundancy.v1_0_0.RedundancyMode",
          "Description": "    \"\"\"This is the redundancy mode of the group.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Redundancy.v1_0_0",
          "ModuleName": "RedundancyMode",
          "PythonVariableName": "mode",
          "IsSubResource": true,
          "Expression": "base.Field(\"Mode\")"
        },
        "MaxNumSupported": {
          "Name": "MaxNumSupported",
          "Type": "Edm.Int64",
          "Description": "    \"\"\"This is the maximum number of members allowable for this particular\n       redundancy group.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Int64",
          "PythonVariableName": "max_num_supported",
          "IsSubResource": true,
          "Expression": "base.Field(\"MaxNumSupported\", adapter=rsd_lib_utils.num_or_none)"
        },
        "MinNumNeeded": {
          "Name": "MinNumNeeded",
          "Type": "Edm.Int64",
          "Description": "    \"\"\"This is the minumum number of members needed for this group to be\n       redundant.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Int64",
          "PythonVariableName": "min_num_needed",
          "IsSubResource": true,
          "Expression": "base.Field(\"MinNumNeeded\", adapter=rsd_lib_utils.num_or_none)"
        },
        "Status": {
          "Name": "Status",
          "Type": "Resource.Status",
          "Description": "    \"\"\"This indicates the known state of the resource, such as if it is\n       enabled.\n    \"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Resource",
          "ModuleName": "Status",
          "PythonVariableName": "status",
          "IsSubResource": true,
          "Expression": "rsd_lib_base.StatusField(\"Status\")"
        },
        "RedundancySet": {
          "Name": "RedundancySet",
          "Type": "Collection(Resource.Item)",
          "Description": "    \"\"\"Contains any ids that represent components of this redundancy set.\"\"\"",
          "IsReferences": true,
          "IsCollection": true,
          "Namespace": "Resource",
          "ModuleName": "Item",
          "PythonVariableName": "redundancy_set",
          "IsSubResource": true,
          "Expression": "base.Field(\"RedundancySet\", adapter=utils.get_members_identities)"
        },
        "RedundancyEnabled": {
          "Name": "RedundancyEnabled",
          "Type": "Edm.Boolean",
          "Description": "    \"\"\"This indicates whether redundancy is enabled.\"\"\"",
          "IsReferences": false,
          "IsCollection": false,
          "Namespace": "Edm",
          "ModuleName": "Boolean",
          "PythonVariableName": "redundancy_enabled",
          "IsSubResource": true,
          "Expression": "base.Field(\"RedundancyEnabled\", adapter=bool)"
        }
      }
    }
  ],
  "links_fields": [],
  "other_modules": [
    "redundancy"
  ],
  "IsCollectionExist": false
}